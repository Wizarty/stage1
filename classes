class Builder{
    
    constructor(build){

        this.value=build
    }
    
    plus(...n) {
    this.value += n.reduce((plus, current) => plus + current);
    return this;
}

    minus(...n) {
    this.value = this.value - n.reduce((minus, current) => minus + current );
    return this;
  }
  
    multiply(n){
    this.value = this.value * n
    return this;
  }
    divide(n){
     this.value = (this.value / n)
     return this;
  }
    get() {
    return this.value;
  }

    
}

////////////////////////////////////////////////////////////////////////////////
class IntBuilder extends Builder {
  
  constructor(n=0) {
    super()
    this.value=n;
    
    }
    
 static random(from,to){
  const min = Math.ceil(from);
  const max = Math.floor(to);
  if(Number.isFinite(from) && Number.isFinite(to) && from < to){
  return Math.floor(Math.random() * (to - from)) + from; 
  // if u want include 'to' just write +1 , (to - from + 1)) + from
  } else {
      return 'input only Numbers and in random(from,to) from < to '
        }
}
 
   mod(n){
     this.value = (this.value % n)
     return this;
  }
  
}

///////////// Run

a = new IntBuilder(10)

console.log(a.plus(2,3,2).minus(1, 2).multiply(2).divide(4).mod(3).get())
console.log(IntBuilder.random(10,100))

/////////////////////////////////////////////////////////////////////////////////



function StringBuilder(str='') {
  Object.assign(this, new Builder(str)) 
  this.value=str;

}
  StringBuilder.prototype = Object.create(Builder.prototype);

  StringBuilder.prototype.minus = function(n) {
    this.value = this.value.substring(0, this.value.length - n);
    return this;
  }
  
  StringBuilder.prototype.multiply = function(n){
     this.value = this.value.repeat(n)
     return this;
  }
  StringBuilder.prototype.divide = function(n){
     this.value = this.value.substring(0,Math.floor(this.value.length / n))
     return this;
  }
  StringBuilder.prototype.remove = function(str){
    this.value = this.value.split(str).filter(item => item !== str).join('')
    return this;
  }
  StringBuilder.prototype.sub = function(from,n){
     this.value = this.value.split('').splice(from,n).join('')
     return this;
  }
 
///////////// Run

a = new StringBuilder('Hello')

console.log(a.plus(' all', '!').minus(4).multiply(3).divide(4).remove('l').sub(1,1).get())       
